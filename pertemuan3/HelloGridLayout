 import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;

public class HelloGridLayout extends Frame implements ActionListener {
    private JButton buttonA;
    private JButton buttonB;
    private JButton buttonC;
    private JButton buttonD;
    private JButton buttonE;
    private JButton buttonF;
    private JButton buttonG;
    private JButton buttonH;
    private JButton buttonI;
    
    private JButton[] buttons;
    private boolean gameOver;

    public HelloGridLayout(){
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        gameover = false;
        
        buttonA = new JButton("");
        buttonB = new JButton("");
        buttonC = new JButton("");
        buttonD = new JButton("");
        buttonE = new JButton("");
        buttonF = new JButton("");
        buttonG = new JButton("");
        buttonH = new JButton("");
        buttonI = new JButton("");
        buttons = new JButton[9];
        buttons[0] = buttonA;
        buttons[0] = buttonB;
        buttons[0] = buttonC;
        buttons[0] = buttonD;
        buttons[0] = buttonE;
        buttons[0] = buttonF;
        buttons[0] = buttonG;
        buttons[0] = buttonH;
        buttons[0] = buttonI;
        
        buttonA.addActionListener(this);
        buttonB.addActionListener(this);
        buttonC.addActionListener(this);
        buttonE.addActionListener(this);
        buttonF.addActionListener(this);
        buttonG.addActionListener(this);
        buttonH.addActionListener(this);
        buttonI.addActionListener(this);
        
        this.setLayout(new GridLayout(3, 3));
        
        this.add(buttonA);
        this.add(buttonB);
        this.add(buttonC);
        this.add(buttonD);
        this.add(buttonE);
        this.add(buttonF);
        this.add(buttonG);
        this.add(buttonH);
        this.add(buttonI);
        
        this.setSize(300, 300);
        
        public void actionPerformed(ActionEvent e){
            if (!gameOver)
            {
                JButton button = (JButton) e.getSource();
                if (button.getText().isEmpty())
                {
                    button.setText("0");
                    checkWinner();
                    if (!gameOver)
                    {
                        for (int i = 0; i < buttons.length; i++)
                        (
                           if (buttons[i].getText().isEmpty())
                           {
                               buttons[i].setText("X");
                               break;
                           }
                        }
                        checkWinner();
                   }
                }
            }    
        }
        
        private void checkWinner()
        {
            String winner = "";
            If (!buttonA.getText().isEmpty()
            && buttonA.getText().equals(buttonB.getText())
            && buttonA.getText().equals(buttonC.getText()))
        {
            winner = buttonA.getText();
            buttonA.setforeground(Color.RED);
            buttonB.setforeground(Color.RED);
            buttonC.setforeground(Color.RED);
        } else if (!buttonD.getText().isEmpty()
            && buttonD.getText().equals(buttonE.getText())
            && buttonD.getText().equals(buttonF.getText()))
        {
            winner = buttonD.getText();
            buttonD.setforeground(Color.RED);
            buttonE.setforeground(Color.RED);
            buttonF.setforeground(Color.RED);
        } else if (!buttonG.getText().isEmpty()
            && buttonG.getText().equals(buttonH.getText())
            && buttonG.getText().equals(buttonI.getText()))
        {
            winner = buttonG.getText();
            buttonG.setforeground(Color.RED);
            buttonH.setforeground(Color.RED);
            buttonI.setforeground(Color.RED);
        } else if (!buttonA.getText().isEmpty()
            && buttonA.getText().equals(buttonD.getText())
            && buttonA.getText().equals(buttonG.getText()))
        {
            winner = buttonA.getText();
            buttonA.setforeground(Color.RED);
            buttonD.setforeground(Color.RED);
            buttonG.setforeground(Color.RED);
        } else if (!buttonB.getText().isEmpty()
            && buttonB.getText().equals(buttonE.getText())
            && buttonB.getText().equals(buttonH.getText()))
        {
            winner = buttonB.getText();
            buttonB.setforeground(Color.RED);
            buttonE.setforeground(Color.RED);
            buttonH.setforeground(Color.RED);
        } else if (!buttonC.getText().isEmpty()
            && buttonC.getText().equals(buttonF.getText())
            && buttonC.getText().equals(buttonI.getText()))
        {
            winner = buttonC.getText();
            buttonC.setforeground(Color.RED);
            buttonF.setforeground(Color.RED);
            buttonI.setforeground(Color.RED);
        } else if (!buttonA.getText().isEmpty()
            && buttonA.getText().equals(buttonF.getText())
            && buttonA.getText().equals(buttonI.getText()))
        {
            winner = buttonA.getText();
            buttonA.setforeground(Color.RED);
            buttonE.setforeground(Color.RED);
            buttonI.setforeground(Color.RED);
        } else if (!buttonC.getText().isEmpty()
            && buttonC.getText().equals(buttonF.getText())
            && buttonC.getText().equals(buttonI.getText()))
        {
            winner = buttonC.getText();
            buttonC.setforeground(Color.RED);
            buttonE.setforeground(Color.RED);
            buttonG.setforeground(Color.RED);
        }

        gameOver = !winner.isEmpty();
    }

    public static void main(String[] args){
        javax.swing.SwingUtilities.invokeLater(new Runnable(){
            public void run() {
                HelloGridLayout h = new HelloGridLayout();
                h.setVisible(true);
            }
        });
    }

}